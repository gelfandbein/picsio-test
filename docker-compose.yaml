version: '3.5'
services:
# + docker-ui
# + 127.0.0.1 to local bind port
# + ..
# + portainer
# + links

######################################
###################################### EXTENDS
######################################
# extends:
#  file: docker-compose-portainer.yaml
#  service: portainer

######################################
###################################### DOCKER-UI
######################################
  portainer:
    build: ./portainer
    image: portainer:picsio
    # privileged: true
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    hostname: portainer
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000"]
#      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
      retries: 5
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "portainer_data:/data"
    ports:
      - "9000:9000"
    networks:
      - localnet

######################################
###################################### NGINX
######################################
  nginx:
    build:
      context: nginx/
      shm_size: '1gb'
    env_file:
      - ./nginx/.env
    image: nginx:picsio
    container_name: nginx
    restart: always
    hostname: nginx
    # command: /tmp/start.sh
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:80"]
      retries: 5
    #links:
    #  - portainer
    depends_on:
      - elasticsearch
      - logstash
      - kibana
      - portainer
    volumes:
      - "./nginx/conf.d:/etc/nginx/conf.d:ro"
      - "./nginx/logs:/var/log/nginx:rw"
    ports:
      - "8181:80/tcp"
#    environment:
#      - "DOCKEROPTS='-H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock'"
    networks:
      - localnet

#######################################
####################################### LOGSTASH
#######################################
  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    image: logstash:picsio
    container_name: logstash
    restart: unless-stopped
    hostname: logstash
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:9600"]
      retries: 5
    volumes:
      - "logstash_data:/usr/share/logstash/data"
      - "./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro"
      - "./logstash/pipeline:/usr/share/logstash/pipeline:ro"
#      - "./logstash/log4j2.properties:/usr/share/logstash/config/log4j2.properties:ro"
    ports:
      - "127.0.0.1:5000:5000/tcp"
      - "127.0.0.1:5000:5000/udp"
      - "127.0.0.1:5044:5044"
      - "127.0.0.1:9600:9600"
    environment:
      - "LS_JAVA_OPTS=-Xmx512m -Xms512m"
#    depends_on:
#      - elasticsearch
    networks:
      - localnet

######################################
###################################### ELASTICSEARCH
######################################
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: elasticsearch
    image: elasticsearch:picsio
    hostname: elasticsearch
    restart: unless-stopped
#    depends_on:
#      - logstash
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://elastic:changeme@localhost:9200/_cat/health"]
      retries: 5
    volumes:
      - "elasticsearch_data:/usr/share/elasticsearch/data"
      - "./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro"
    ports:
      - "127.0.0.1:9200:9200"
      - "127.0.0.1:9300:9300"
#    links:
#      - kibana
#      - logstash
    environment:
      ### https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      - discovery.type=single-node
      ### main password
      - "ELASTIC_PASSWORD=changeme"
      - "ES_JAVA_OPTS=-Xmx512m -Xms512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - localnet


##########################################
########################################## KIBANA
##########################################
  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    image: kibana:picsio
    container_name: kibana
    hostname: kibana
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:5601"]
      retries: 5
    volumes:
      - "kibana_data:/usr/share/kibana/data"
      - "./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro"
    links:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - localnet
    depends_on:
      - elasticsearch
# { condition: service_healthy }

##########################################
########################################## APM-SERVER
##########################################
  apm-server:
    build:
      context: apm-server/
      args:
        ELK_VERSION: $ELK_VERSION
    image: apm-server:picsio
    hostname: apm-server
    container_name: apm-server
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:8200"]
      retries: 5
    command:
        # Disable strict permission checking on 'apm-server.yml' configuration file
        # https://www.elastic.co/guide/en/beats/libbeat/current/config-file-permissions.html
      - --strict.perms=false
    volumes:
      - "./apm-server/config/apm-server.yml:/usr/share/apm-server/apm-server.yml:ro"
    links:
      - elasticsearch
      - kibana
      - logstash
    ports:
      - '127.0.0.1:8200:8200'
    networks:
      - localnet
    depends_on:
      - elasticsearch
      - kibana

##########################################
########################################## FILEBEAT
##########################################
  filebeat:
    build:
      context: filebeat/
      args:
        ELK_VERSION: $ELK_VERSION
    hostname: filebeat
    image: filebeat:picsio
    user: root
    restart: unless-stopped
    container_name: filebeat
#    healthcheck:
#      test: ["CMD", "curl", "-s", "-f", "http://filebeat:8200/polls"]
#      retries: 5
    command:
# filebeat -e -strict.perms=false
        # https://www.elastic.co/guide/en/beats/libbeat/current/config-file-permissions.html
      - --strict.perms=false
    volumes:
      - "./filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro"
      - "/var/lib/docker/containers:/usr/share/filebeat/docker/containers:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/var/log/mail.log:/var/log/host-logs/mail.log:ro"
      - "/var/log/apache2/access.log:/var/log/host-logs/apache2/access.log:ro"
      - "/var/log/apache2/error.log:/var/log/host-logs/apache2/error.log:ro"
#    ports:
#      - '127.0.0.1:8200:8200'
#    environment:
#      - setup.kibana.host: kibana:5601
#      - output.elasticsearch.hosts=["elasticsearch:9200"]
    links:
      - logstash
    networks:
      - localnet
    depends_on:
      - logstash

##########################################
########################################## METRICBEAT
##########################################
  metricbeat:
    build:
      context: metricbeat/
      args:
        ELK_VERSION: $ELK_VERSION
    image: metricbeat:picsio
    user: root
    restart: unless-stopped
    hostname: metricbeat
    container_name: metricbeat
#    healthcheck:
#      test: ["CMD", "curl", "-s", "-f", "http://metricbeat:8200/polls"]
#      retries: 5
    command:
        # https://www.elastic.co/guide/en/beats/libbeat/current/config-file-permissions.html
      - --strict.perms=false
    volumes:
      - "./metricbeat/config/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro"
#      - "/sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro"
#      - "/proc:/hostfs/proc:ro"
#      - "/:/hostfs"
#      - "./metricbeat/modules.d:/usr/share/metricbeat/modules.d:ro"
      - "/var/lib/docker:/var/lib/docker:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
#    ports:
#      - '127.0.0.1:8200:8200'
#    environment:
#      - setup.kibana.host: kibana:5601
#      - output.elasticsearch.hosts=["elasticsearch:9200"]
    links:
      - logstash
      - elasticsearch
      - kibana
    networks:
      - localnet
    depends_on:
      - logstash

##########################################
########################################## MISC
##########################################
volumes:
  logstash_data:
    driver: local
  elasticsearch_data:
    driver: local
  kibana_data:
    driver: local
  portainer_data:
    driver: local
#  data01:
#    driver: local
#  data02:
#    driver: local
#  data03:
#    driver: local

networks:
  localnet:
    driver: bridge


