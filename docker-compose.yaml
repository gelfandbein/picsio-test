version: '3.8'

x-logging:
  &default
  options:
    max-size: '1m'
    max-file: '3'
  driver: json-file


services:

######################################
###################################### EXTENDS
######################################
# extends:
#  file: docker-compose-portainer.yaml
#  service: portainer

######################################
###################################### DOCKER-UI
######################################
#  portainer:
#    build:
#      context: portainer/
#      shm_size: '1gb'
#    image: portainer:picsio
#    # privileged: true
#    container_name: portainer
#    command: -H unix:///var/run/docker.sock
#    hostname: portainer
#    restart: always
##    healthcheck:
##      test: ["CMD", "curl", "-s", "-f", "http://localhost:9000"]
##      retries: 5
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock:ro"
#      - "portainer_data:/data"
#    ports:
#      - "9000:9000"
#    networks:
#      - localnet

######################################
###################################### ELASTICSEARCH-HEAD
######################################
#  elasticsearch-head:
#    build:
#      context: elasticsearch/head/
#    image: elasticsearch-head:picsio
#    container_name: elasticsearch-head
#    hostname: elasticsearch-head
#    restart: always
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:9100"]
#      retries: 5
#    depends_on:
#      - nginx
#      - elasticsearch
#    links:
#      - elasticsearch
#    networks:
#      - localnet

######################################
###################################### NGINX
######################################
  nginx:
    build:
      context: nginx/
#      shm_size: '1gb'
    env_file:
      - ./nginx/.env
    image: nginx:picsio
    logging: *default
    container_name: nginx
    restart: always
    hostname: nginx
    domainname: pics.io
    # entrypoint: nginx -g 'daemon off;'
    # command: ["/wait-for-it.sh", "kibana:5601", "--", "/start.sh", "-d"]
    entrypoint: sh -c "/wait && /start.sh -daemon"
    environment:
      WAIT_HOSTS: kibana:5601, elasticsearch:9200, logstash:9600
      WAIT_HOSTS_TIMEOUT: 60
      WAIT_SLEEP_INTERVAL: 30
      WAIT_HOST_CONNECT_TIMEOUT: 30
#    healthcheck:
#      test: ["CMD", "curl", "-S", "-f", "--user", "elastic:changeme", "http://localhost:8181"]
#      interval: 60s
#      timeout: 15s
#      retries: 5
    #links:
    #  - portainer
    depends_on:
      - elasticsearch
      - logstash
      - kibana
    volumes:
#      - type: volume
#        source: nginx_logs
#        target: /var/log/nginx
#        read_only: false
      - type: tmpfs               # or use 'tmpfs'
        target: /var/cache/nginx
      - type: tmpfs
        target: /run
      - type: bind
        source: ./nginx/config/nginx.conf
        target: /etc/nginx/nginx.conf
        # read_only: true
      #- type: bind
        #source: ./nginx/logs
        #target: /var/log/nginx
        #read_only: false
      - "./nginx/config/containers.conf:/etc/nginx/conf.d/default.conf:ro"
      - "./nginx/config/proxy_params:/etc/nginx/proxy_params:ro"
      - "./nginx/config/htpasswd.elk:/etc/nginx/htpasswd.elk"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    ports:
      - "8181:80"
    networks:
      - localnet

#######################################
####################################### LOGSTASH
#######################################
  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    image: logstash:picsio
    container_name: logstash
    restart: unless-stopped
    hostname: logstash
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:9600"]
      interval: 30s
      timeout: 15s
      retries: 5
    volumes:
      # - "logstash_data:/usr/share/logstash/data"
      - "./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro"
      - "./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro"
      - "./logstash/config/log4j2.properties:/usr/share/logstash/config/log4j2.properties:ro"
      - "./logstash/config/jvm.options:/usr/share/logstash/config/jvm.options:ro"
      - "./logstash/pipeline:/usr/share/logstash/pipeline:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
#      - "./logstash/logs/:/usr/share/logstash/logs/:rw"
    ports:
      - "127.0.0.1:5000:5000/tcp"
      - "127.0.0.1:5000:5000/udp"
      - "127.0.0.1:5044:5044"      # beats port
      - "127.0.0.1:9600:9600"      # api port
    environment:
      - "LS_JAVA_OPTS=-Xmx512m -Xms512m"
#    depends_on:
#      - elasticsearch
    networks:
      - localnet

######################################
###################################### ELASTICSEARCH
######################################
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: elasticsearch
    image: elasticsearch:picsio
    hostname: elasticsearch
    restart: unless-stopped
#    depends_on:
#      - logstash
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://elastic:changeme@localhost:9200/_cat/health"]
      interval: 30s
      timeout: 15s
      retries: 5
    volumes:
      - "elasticsearch_data:/usr/share/elasticsearch/data"
      - "./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    ports:
      - "127.0.0.1:9200:9200"
      - "127.0.0.1:9300:9300"
#    links:
#      - kibana
#      - logstash
    environment:
      - "ELASTIC_PASSWORD=changeme"
      - "ES_JAVA_OPTS=-Xmx512m -Xms512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - localnet


##########################################
########################################## KIBANA
##########################################
  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    image: kibana:picsio
    container_name: kibana
    hostname: kibana
    restart: unless-stopped
    environment:
      - "TZ=${HOST_TZ}"
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://elastic:changeme@localhost:5601"]
      interval: 30s
      timeout: 15s
      retries: 5
    volumes:
      - "kibana_data:/usr/share/kibana/data"
      - "./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    links:
      - elasticsearch
    ports:
      - "127.0.0.1:5601:5601"
    networks:
      - localnet
    depends_on:
      - elasticsearch
# { condition: service_healthy }

##########################################
########################################## APM-SERVER
##########################################
#  apm-server:
#    build:
#      context: apm-server/
#      args:
#        ELK_VERSION: $ELK_VERSION
#    image: apm-server:picsio
#    hostname: apm-server
#    container_name: apm-server
#    restart: unless-stopped
#    healthcheck:
#      test: ["CMD", "curl", "-s", "-f", "http://localhost:8200"]
#      retries: 5
#    command:
#        # Disable strict permission checking on 'apm-server.yml' configuration file
#        # https://www.elastic.co/guide/en/beats/libbeat/current/config-file-permissions.html
#      - --strict.perms=false
#    volumes:
#      - "./apm-server/config/apm-server.yml:/usr/share/apm-server/apm-server.yml:ro"
#    links:
#      - elasticsearch
#      - kibana
#      - logstash
#    ports:
#      - '127.0.0.1:8200:8200'
#    networks:
#      - localnet
#    depends_on:
#      - elasticsearch
#      - kibana

##########################################
########################################## FILEBEAT
##########################################
  filebeat:
    build:
      context: filebeat/
      args:
        ELK_VERSION: $ELK_VERSION
    hostname: filebeat
    image: filebeat:picsio
    user: root
    restart: unless-stopped
    container_name: filebeat
##    command: filebeat setup
##    healthcheck:
##      test: ["CMD", "curl", "-s", "-f", "http://filebeat:8200/polls"]
##      retries: 5
    command:
        # https://www.elastic.co/guide/en/beats/libbeat/current/config-file-permissions.html
      - --strict.perms=false
    volumes:
      - type: volume
        source: filebeat_data
        target: /usr/share/filebeat/data
##      - type: volume
##        source: nginx_logs
##        target: /var/log/nginx
##        read_only: true
      - "./filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro"
      - "/var/lib/docker/containers/:/var/lib/docker/containers/:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
##    ports:
##      - '127.0.0.1:8200:8200'
##    environment:
##      - setup.kibana.host: kibana:5601
##      - output.elasticsearch.hosts=["elasticsearch:9200"]
#    links:
#      - nginx
#      - logstash
#      - kibana
#      - elasticsearch
    networks:
      - localnet
    depends_on:
      - logstash
      - elasticsearch
      - kibana

##########################################
########################################## METRICBEAT
##########################################
  metricbeat:
    build:
      context: metricbeat/
      args:
        ELK_VERSION: $ELK_VERSION
    image: metricbeat:picsio
    user: root
    restart: unless-stopped
    hostname: metricbeat
    container_name: metricbeat
##    healthcheck:
##      test: ["CMD", "curl", "-s", "-f", "http://elastic:changeme@localhost:8200/polls"]
##      retries: 5
    command:
        # https://www.elastic.co/guide/en/beats/libbeat/current/config-file-permissions.html
      - --strict.perms=false
    volumes:
      - "./metricbeat/config/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro"
##      - "/sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro"
##      - "/proc:/hostfs/proc:ro"
##      - "/:/hostfs"
##      - "./metricbeat/modules.d:/usr/share/metricbeat/modules.d:ro"
      - "/var/lib/docker:/var/lib/docker:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
##    ports:
##      - '127.0.0.1:8200:8200'
##    environment:
##      - setup.kibana.host: kibana:5601
##      - output.elasticsearch.hosts=["elasticsearch:9200"]
    links:
      - logstash
      - elasticsearch
      - kibana
    networks:
      - localnet
    depends_on:
      - logstash
      - kibana
      - elasticsearch

##########################################
########################################## HEARTBEAT
##########################################
  heartbeat:
    build:
      context: heartbeat/
      args:
        ELK_VERSION: $ELK_VERSION
    image: heartbeat:picsio
    user: root
    restart: unless-stopped
    hostname: heartbeat
    container_name: heartbeat
    volumes:
      - "./heartbeat/config/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml:ro"
    links:
      - logstash
      - elasticsearch
      - kibana
    networks:
      - localnet
    depends_on:
      - logstash
      - kibana
      - elasticsearch

##########################################
########################################## MISC
##########################################
volumes:
#  nginx_logs:
#    driver: local
  logstash_data:
    driver: local
  elasticsearch_data:
    driver: local
  kibana_data:
    driver: local
  filebeat_data:
    driver: local

#  portainer_data:
#    driver: local

networks:
  localnet:
    driver: bridge


